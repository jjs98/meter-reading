name: Build and Test
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-frontend:
    name: Build client
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - run: corepack enable
        
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: pnpm

      - name: Pnpm install
        run: pnpm i
        working-directory: ./client

      - name: Build client
        run: pnpm build
        working-directory: ./client
        
      - name: Run linting
        run: pnpm lint
        working-directory: ./client
        
      - name: Run audit
        run: pnpm audit
        working-directory: ./client

      # - name: Install Playwright Browsers
      #   run: pnpm pw:install
        # working-directory: ./client

      # - name: Run Playwright tests
      #   run: pnpm pw
        # working-directory: ./client

      # - uses: actions/upload-artifact@v3
      #   if: always()
      #   with:
      #     name: playwright-report
      #     path: playwright-report
      #     retention-days: 10
        # working-directory: ./client

  docker-frontend:
    name: Build and push client docker image
    needs: [build-frontend]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        platform:
          - linux/arm64v8
    if: success()
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: jjs98/meter-reading-client

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .client
          push: true
          tags: jjs98/meter-reading-client:latest
          platforms: linux/arm64v8

  build-backend:
    name: Build API
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      - name: Build API
        run: dotnet build ./server/WebApi/WebApi.csproj -c Release

      # - name: Test API
      #   run: dotnet test ./server/WebApi.Tests/WebApi.Tests.csproj

  docker-backend:
    name: Build and push api docker image
    needs: [build-backend]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .server
          push: true
          tags: jjs98/meter-reading-api:latest
          platforms: linux/arm64v8
    
