name: Build and Test
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-frontend:
    name: Build client
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # - run: corepack enable
      ## fix for corepack issue
      - run: npm i -g --force corepack && corepack enable
        
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm
          cache-dependency-path: ./client/pnpm-lock.yaml

      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - run: pnpm install
        working-directory: ./client

      - run: pnpm build
        working-directory: ./client
        
      - run: pnpm lint
        working-directory: ./client
        
      # - run: pnpm audit
      #   working-directory: ./client

      # - run: pnpm pw:install
        # working-directory: ./client

      # - run: pnpm pw
        # working-directory: ./client

      # - uses: actions/upload-artifact@v3
      #   if: always()
      #   with:
      #     name: playwright-report
      #     path: playwright-report
      #     retention-days: 10
        # working-directory: ./client

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_REGISTRY }}/meter-reading-client

      - name: Log in to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: client
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/meter-reading-client:latest
          platforms: linux/arm64

  build-backend:
    name: Build server
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.x

      - name: Build API
        run: dotnet restore ./server/server.sln

      - name: Test
        run: docker ps

      - name: Test API
        run: |
          export ConnectionStrings__AppDbContext="Server=localhost;Port=5432;Database=test;User Id=test;Password=test;"
          dotnet test ./server/server.sln

      - name: Log in to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: server
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/meter-reading-api:latest
          platforms: linux/arm64

  deploy:
    name: Deploy
    needs: [build-frontend, build-backend]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Push Watchtower
        id: push_watchtower
        run: 'curl -H "Authorization: Bearer ${{ secrets.WATCHTOWER_TOKEN }}" "${{ secrets.WATCHTOWER_URL }}"'
        if: github.ref == 'refs/heads/main'
    
